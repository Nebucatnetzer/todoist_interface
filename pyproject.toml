[tool.poetry]
name = "todoist-interface"
version = "0.1.0"
description = ""
authors = ["Andreas Zweili <andreas@zweili.ch>"]
license = "GPL-3.0-or-later"
readme = "README.md"
packages = [
    { include="todoist_interface" }
]

[tool.pylint]
max-line-length = 88
[tool.pylint."MESSAGES CONTROL"]
disable = [
    "missing-function-docstring",
    "missing-class-docstring",
]

[tool.mypy]
# Start off with these
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true

# Getting these passing should be easy
strict_equality = true

# Strongly recommend enabling this one as soon as you can
check_untyped_defs = true

# These shouldn't be too much additional work, but may be tricky to
# get passing if you use a lot of untyped libraries
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_any_generics = true

# These next few are various gradations of forcing use of type annotations
disallow_untyped_calls = true
disallow_incomplete_defs = true
disallow_untyped_defs = true

# This one isn't too hard to get passing, but return on investment is lower
no_implicit_reexport = true

# This one can be tricky to get passing if you use a lot of untyped libraries
warn_return_any = true

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
requests = "^2.32.3"
PyYAML = "^6.0.1"

[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
pyinstaller = "^6.8.0"
python-lsp-server = "^1.11.0"
pylint = "^3.2.3"
mypy = "^1.10.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
